// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "CvtColor.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic CvtColor::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic CvtColor::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> CvtColor::ap_ST_fsm_state1 = "1";
const sc_lv<4> CvtColor::ap_ST_fsm_state2 = "10";
const sc_lv<4> CvtColor::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> CvtColor::ap_ST_fsm_state7 = "1000";
const bool CvtColor::ap_const_boolean_1 = true;
const sc_lv<32> CvtColor::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> CvtColor::ap_const_lv32_2 = "10";
const bool CvtColor::ap_const_boolean_0 = false;
const sc_lv<1> CvtColor::ap_const_lv1_1 = "1";
const sc_lv<32> CvtColor::ap_const_lv32_1 = "1";
const sc_lv<1> CvtColor::ap_const_lv1_0 = "0";
const sc_lv<9> CvtColor::ap_const_lv9_0 = "000000000";
const sc_lv<32> CvtColor::ap_const_lv32_3 = "11";
const sc_lv<10> CvtColor::ap_const_lv10_0 = "0000000000";
const sc_lv<9> CvtColor::ap_const_lv9_1 = "1";
const sc_lv<10> CvtColor::ap_const_lv10_1 = "1";
const sc_lv<32> CvtColor::ap_const_lv32_16 = "10110";
const sc_lv<32> CvtColor::ap_const_lv32_1D = "11101";
const sc_lv<32> CvtColor::ap_const_lv32_15 = "10101";
const sc_lv<32> CvtColor::ap_const_lv32_7 = "111";
const sc_lv<8> CvtColor::ap_const_lv8_FF = "11111111";
const sc_lv<29> CvtColor::ap_const_lv29_1322D0 = "100110010001011010000";
const sc_lv<30> CvtColor::ap_const_lv30_259168 = "1001011001000101101000";
const sc_lv<28> CvtColor::ap_const_lv28_74BC6 = "1110100101111000110";

CvtColor::CvtColor(sc_module_name name) : sc_module(name), mVcdFile(0) {
    gaussian_filter_mbkb_U17 = new gaussian_filter_mbkb<1,1,22,8,29>("gaussian_filter_mbkb_U17");
    gaussian_filter_mbkb_U17->din0(r_V_i_i_fu_277_p0);
    gaussian_filter_mbkb_U17->din1(r_V_i_i_fu_277_p1);
    gaussian_filter_mbkb_U17->dout(r_V_i_i_fu_277_p2);
    gaussian_filter_mcud_U18 = new gaussian_filter_mcud<1,1,23,8,29,30>("gaussian_filter_mcud_U18");
    gaussian_filter_mcud_U18->din0(grp_fu_283_p0);
    gaussian_filter_mcud_U18->din1(grp_fu_283_p1);
    gaussian_filter_mcud_U18->din2(grp_fu_283_p2);
    gaussian_filter_mcud_U18->dout(grp_fu_283_p3);
    gaussian_filter_mdEe_U19 = new gaussian_filter_mdEe<1,1,20,8,29,29>("gaussian_filter_mdEe_U19");
    gaussian_filter_mdEe_U19->din0(grp_fu_294_p0);
    gaussian_filter_mdEe_U19->din1(grp_fu_294_p1);
    gaussian_filter_mdEe_U19->din2(r_V_i_i_reg_340);
    gaussian_filter_mdEe_U19->dout(grp_fu_294_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( p_src_data_stream_0_V_empty_n );
    sensitive << ( p_src_data_stream_1_V_empty_n );
    sensitive << ( p_src_data_stream_2_V_empty_n );
    sensitive << ( p_dst_data_stream_0_V_full_n );
    sensitive << ( p_dst_data_stream_1_V_full_n );
    sensitive << ( p_dst_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_23_i_reg_321 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( p_src_data_stream_0_V_empty_n );
    sensitive << ( p_src_data_stream_1_V_empty_n );
    sensitive << ( p_src_data_stream_2_V_empty_n );
    sensitive << ( p_dst_data_stream_0_V_full_n );
    sensitive << ( p_dst_data_stream_1_V_full_n );
    sensitive << ( p_dst_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_23_i_reg_321 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( p_src_data_stream_0_V_empty_n );
    sensitive << ( p_src_data_stream_1_V_empty_n );
    sensitive << ( p_src_data_stream_2_V_empty_n );
    sensitive << ( p_dst_data_stream_0_V_full_n );
    sensitive << ( p_dst_data_stream_1_V_full_n );
    sensitive << ( p_dst_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_23_i_reg_321 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( p_src_rows_V_empty_n );
    sensitive << ( p_src_cols_V_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( p_src_data_stream_0_V_empty_n );
    sensitive << ( p_src_data_stream_1_V_empty_n );
    sensitive << ( p_src_data_stream_2_V_empty_n );
    sensitive << ( tmp_23_i_reg_321 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);
    sensitive << ( p_dst_data_stream_0_V_full_n );
    sensitive << ( p_dst_data_stream_1_V_full_n );
    sensitive << ( p_dst_data_stream_2_V_full_n );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( tmp_23_i_fu_192_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( tmp_i_fu_177_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_deleted_zeros_fu_263_p2);
    sensitive << ( tmp_520_fu_255_p3 );
    sensitive << ( rev_fu_249_p2 );

    SC_METHOD(thread_grp_fu_283_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_283_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( grp_fu_283_p10 );

    SC_METHOD(thread_grp_fu_283_p10);
    sensitive << ( tmp_523_reg_330 );

    SC_METHOD(thread_grp_fu_283_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( grp_fu_283_p20 );

    SC_METHOD(thread_grp_fu_283_p20);
    sensitive << ( grp_fu_294_p3 );

    SC_METHOD(thread_grp_fu_294_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_294_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( grp_fu_294_p10 );

    SC_METHOD(thread_grp_fu_294_p10);
    sensitive << ( tmp_524_reg_335 );

    SC_METHOD(thread_i_cast_cast_i_fu_173_p1);
    sensitive << ( i_i_reg_151 );

    SC_METHOD(thread_i_fu_182_p2);
    sensitive << ( i_i_reg_151 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( tmp_i_fu_177_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_j_cast_cast_i_fu_188_p1);
    sensitive << ( j_i_reg_162 );

    SC_METHOD(thread_j_fu_197_p2);
    sensitive << ( j_i_reg_162 );

    SC_METHOD(thread_p_Val2_6_fu_216_p4);
    sensitive << ( grp_fu_283_p3 );

    SC_METHOD(thread_p_Val2_7_fu_236_p2);
    sensitive << ( tmp_3_i_i_i_cast_i_fu_232_p1 );
    sensitive << ( p_Val2_6_fu_216_p4 );

    SC_METHOD(thread_p_Val2_s_fu_269_p3);
    sensitive << ( p_Val2_7_fu_236_p2 );
    sensitive << ( deleted_zeros_fu_263_p2 );

    SC_METHOD(thread_p_dst_data_stream_0_V_blk_n);
    sensitive << ( p_dst_data_stream_0_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );

    SC_METHOD(thread_p_dst_data_stream_0_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );
    sensitive << ( p_Val2_s_reg_345 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_p_dst_data_stream_0_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_dst_data_stream_1_V_blk_n);
    sensitive << ( p_dst_data_stream_1_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );

    SC_METHOD(thread_p_dst_data_stream_1_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );
    sensitive << ( p_Val2_s_reg_345 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_p_dst_data_stream_1_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_dst_data_stream_2_V_blk_n);
    sensitive << ( p_dst_data_stream_2_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );

    SC_METHOD(thread_p_dst_data_stream_2_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );
    sensitive << ( p_Val2_s_reg_345 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_p_dst_data_stream_2_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_23_i_reg_321_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_src_cols_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_src_cols_V_empty_n );

    SC_METHOD(thread_p_src_cols_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_src_rows_V_empty_n );
    sensitive << ( p_src_cols_V_empty_n );

    SC_METHOD(thread_p_src_data_stream_0_V_blk_n);
    sensitive << ( p_src_data_stream_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_23_i_reg_321 );

    SC_METHOD(thread_p_src_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_23_i_reg_321 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_src_data_stream_1_V_blk_n);
    sensitive << ( p_src_data_stream_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_23_i_reg_321 );

    SC_METHOD(thread_p_src_data_stream_1_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_23_i_reg_321 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_src_data_stream_2_V_blk_n);
    sensitive << ( p_src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_23_i_reg_321 );

    SC_METHOD(thread_p_src_data_stream_2_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_23_i_reg_321 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_src_rows_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_src_rows_V_empty_n );

    SC_METHOD(thread_p_src_rows_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_src_rows_V_empty_n );
    sensitive << ( p_src_cols_V_empty_n );

    SC_METHOD(thread_r_V_i_i_fu_277_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_r_V_i_i_fu_277_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( r_V_i_i_fu_277_p10 );

    SC_METHOD(thread_r_V_i_i_fu_277_p10);
    sensitive << ( p_src_data_stream_0_V_dout );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_rev_fu_249_p2);
    sensitive << ( tmp_519_fu_242_p3 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_23_i_fu_192_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_src_cols_V_read_reg_302 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_cast_cast_i_fu_188_p1 );

    SC_METHOD(thread_tmp_3_i_i_i_cast_i_fu_232_p1);
    sensitive << ( tmp_fu_225_p3 );

    SC_METHOD(thread_tmp_519_fu_242_p3);
    sensitive << ( grp_fu_283_p3 );

    SC_METHOD(thread_tmp_520_fu_255_p3);
    sensitive << ( p_Val2_7_fu_236_p2 );

    SC_METHOD(thread_tmp_fu_225_p3);
    sensitive << ( grp_fu_283_p3 );

    SC_METHOD(thread_tmp_i_fu_177_p2);
    sensitive << ( p_src_rows_V_read_reg_307 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_cast_cast_i_fu_173_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_src_rows_V_empty_n );
    sensitive << ( p_src_cols_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_i_fu_177_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_23_i_fu_192_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "CvtColor_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, p_src_rows_V_dout, "(port)p_src_rows_V_dout");
    sc_trace(mVcdFile, p_src_rows_V_empty_n, "(port)p_src_rows_V_empty_n");
    sc_trace(mVcdFile, p_src_rows_V_read, "(port)p_src_rows_V_read");
    sc_trace(mVcdFile, p_src_cols_V_dout, "(port)p_src_cols_V_dout");
    sc_trace(mVcdFile, p_src_cols_V_empty_n, "(port)p_src_cols_V_empty_n");
    sc_trace(mVcdFile, p_src_cols_V_read, "(port)p_src_cols_V_read");
    sc_trace(mVcdFile, p_src_data_stream_0_V_dout, "(port)p_src_data_stream_0_V_dout");
    sc_trace(mVcdFile, p_src_data_stream_0_V_empty_n, "(port)p_src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, p_src_data_stream_0_V_read, "(port)p_src_data_stream_0_V_read");
    sc_trace(mVcdFile, p_src_data_stream_1_V_dout, "(port)p_src_data_stream_1_V_dout");
    sc_trace(mVcdFile, p_src_data_stream_1_V_empty_n, "(port)p_src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, p_src_data_stream_1_V_read, "(port)p_src_data_stream_1_V_read");
    sc_trace(mVcdFile, p_src_data_stream_2_V_dout, "(port)p_src_data_stream_2_V_dout");
    sc_trace(mVcdFile, p_src_data_stream_2_V_empty_n, "(port)p_src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, p_src_data_stream_2_V_read, "(port)p_src_data_stream_2_V_read");
    sc_trace(mVcdFile, p_dst_data_stream_0_V_din, "(port)p_dst_data_stream_0_V_din");
    sc_trace(mVcdFile, p_dst_data_stream_0_V_full_n, "(port)p_dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, p_dst_data_stream_0_V_write, "(port)p_dst_data_stream_0_V_write");
    sc_trace(mVcdFile, p_dst_data_stream_1_V_din, "(port)p_dst_data_stream_1_V_din");
    sc_trace(mVcdFile, p_dst_data_stream_1_V_full_n, "(port)p_dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, p_dst_data_stream_1_V_write, "(port)p_dst_data_stream_1_V_write");
    sc_trace(mVcdFile, p_dst_data_stream_2_V_din, "(port)p_dst_data_stream_2_V_din");
    sc_trace(mVcdFile, p_dst_data_stream_2_V_full_n, "(port)p_dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, p_dst_data_stream_2_V_write, "(port)p_dst_data_stream_2_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, p_src_rows_V_blk_n, "p_src_rows_V_blk_n");
    sc_trace(mVcdFile, p_src_cols_V_blk_n, "p_src_cols_V_blk_n");
    sc_trace(mVcdFile, p_src_data_stream_0_V_blk_n, "p_src_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_23_i_reg_321, "tmp_23_i_reg_321");
    sc_trace(mVcdFile, p_src_data_stream_1_V_blk_n, "p_src_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, p_src_data_stream_2_V_blk_n, "p_src_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, p_dst_data_stream_0_V_blk_n, "p_dst_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, tmp_23_i_reg_321_pp0_iter2_reg, "tmp_23_i_reg_321_pp0_iter2_reg");
    sc_trace(mVcdFile, p_dst_data_stream_1_V_blk_n, "p_dst_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, p_dst_data_stream_2_V_blk_n, "p_dst_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, j_i_reg_162, "j_i_reg_162");
    sc_trace(mVcdFile, p_src_cols_V_read_reg_302, "p_src_cols_V_read_reg_302");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, p_src_rows_V_read_reg_307, "p_src_rows_V_read_reg_307");
    sc_trace(mVcdFile, tmp_i_fu_177_p2, "tmp_i_fu_177_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_182_p2, "i_fu_182_p2");
    sc_trace(mVcdFile, i_reg_316, "i_reg_316");
    sc_trace(mVcdFile, tmp_23_i_fu_192_p2, "tmp_23_i_fu_192_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_23_i_reg_321_pp0_iter1_reg, "tmp_23_i_reg_321_pp0_iter1_reg");
    sc_trace(mVcdFile, j_fu_197_p2, "j_fu_197_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_523_reg_330, "tmp_523_reg_330");
    sc_trace(mVcdFile, tmp_524_reg_335, "tmp_524_reg_335");
    sc_trace(mVcdFile, r_V_i_i_fu_277_p2, "r_V_i_i_fu_277_p2");
    sc_trace(mVcdFile, r_V_i_i_reg_340, "r_V_i_i_reg_340");
    sc_trace(mVcdFile, p_Val2_s_fu_269_p3, "p_Val2_s_fu_269_p3");
    sc_trace(mVcdFile, p_Val2_s_reg_345, "p_Val2_s_reg_345");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, i_i_reg_151, "i_i_reg_151");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, i_cast_cast_i_fu_173_p1, "i_cast_cast_i_fu_173_p1");
    sc_trace(mVcdFile, j_cast_cast_i_fu_188_p1, "j_cast_cast_i_fu_188_p1");
    sc_trace(mVcdFile, grp_fu_294_p3, "grp_fu_294_p3");
    sc_trace(mVcdFile, grp_fu_283_p3, "grp_fu_283_p3");
    sc_trace(mVcdFile, tmp_fu_225_p3, "tmp_fu_225_p3");
    sc_trace(mVcdFile, tmp_3_i_i_i_cast_i_fu_232_p1, "tmp_3_i_i_i_cast_i_fu_232_p1");
    sc_trace(mVcdFile, p_Val2_6_fu_216_p4, "p_Val2_6_fu_216_p4");
    sc_trace(mVcdFile, tmp_519_fu_242_p3, "tmp_519_fu_242_p3");
    sc_trace(mVcdFile, p_Val2_7_fu_236_p2, "p_Val2_7_fu_236_p2");
    sc_trace(mVcdFile, tmp_520_fu_255_p3, "tmp_520_fu_255_p3");
    sc_trace(mVcdFile, rev_fu_249_p2, "rev_fu_249_p2");
    sc_trace(mVcdFile, deleted_zeros_fu_263_p2, "deleted_zeros_fu_263_p2");
    sc_trace(mVcdFile, r_V_i_i_fu_277_p0, "r_V_i_i_fu_277_p0");
    sc_trace(mVcdFile, r_V_i_i_fu_277_p1, "r_V_i_i_fu_277_p1");
    sc_trace(mVcdFile, grp_fu_283_p0, "grp_fu_283_p0");
    sc_trace(mVcdFile, grp_fu_283_p1, "grp_fu_283_p1");
    sc_trace(mVcdFile, grp_fu_283_p2, "grp_fu_283_p2");
    sc_trace(mVcdFile, grp_fu_294_p0, "grp_fu_294_p0");
    sc_trace(mVcdFile, grp_fu_294_p1, "grp_fu_294_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_283_p10, "grp_fu_283_p10");
    sc_trace(mVcdFile, grp_fu_283_p20, "grp_fu_283_p20");
    sc_trace(mVcdFile, grp_fu_294_p10, "grp_fu_294_p10");
    sc_trace(mVcdFile, r_V_i_i_fu_277_p10, "r_V_i_i_fu_277_p10");
#endif

    }
}

CvtColor::~CvtColor() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete gaussian_filter_mbkb_U17;
    delete gaussian_filter_mcud_U18;
    delete gaussian_filter_mdEe_U19;
}

void CvtColor::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(tmp_i_fu_177_p2.read(), ap_const_lv1_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_177_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_177_p2.read()))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_i_reg_151 = i_reg_316.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_rows_V_empty_n.read())))) {
        i_i_reg_151 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_fu_192_p2.read()))) {
        j_i_reg_162 = j_fu_197_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_177_p2.read()))) {
        j_i_reg_162 = ap_const_lv10_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_316 = i_fu_182_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter1_reg.read()))) {
        p_Val2_s_reg_345 = p_Val2_s_fu_269_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_rows_V_empty_n.read())))) {
        p_src_cols_V_read_reg_302 = p_src_cols_V_dout.read();
        p_src_rows_V_read_reg_307 = p_src_rows_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        r_V_i_i_reg_340 = r_V_i_i_fu_277_p2.read();
        tmp_523_reg_330 = p_src_data_stream_1_V_dout.read();
        tmp_524_reg_335 = p_src_data_stream_2_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_23_i_reg_321 = tmp_23_i_fu_192_p2.read();
        tmp_23_i_reg_321_pp0_iter1_reg = tmp_23_i_reg_321.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        tmp_23_i_reg_321_pp0_iter2_reg = tmp_23_i_reg_321_pp0_iter1_reg.read();
    }
}

void CvtColor::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void CvtColor::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void CvtColor::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void CvtColor::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[3];
}

void CvtColor::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CvtColor::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_0_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_1_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_2_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_2_V_full_n.read())))));
}

void CvtColor::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_0_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_1_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_2_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_2_V_full_n.read())))));
}

void CvtColor::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_0_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_1_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_2_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_2_V_full_n.read())))));
}

void CvtColor::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_rows_V_empty_n.read()));
}

void CvtColor::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CvtColor::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_src_data_stream_2_V_empty_n.read())));
}

void CvtColor::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CvtColor::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_0_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_1_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_stream_2_V_full_n.read())));
}

void CvtColor::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(tmp_23_i_fu_192_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void CvtColor::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_177_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void CvtColor::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void CvtColor::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void CvtColor::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void CvtColor::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void CvtColor::thread_deleted_zeros_fu_263_p2() {
    deleted_zeros_fu_263_p2 = (tmp_520_fu_255_p3.read() | rev_fu_249_p2.read());
}

void CvtColor::thread_grp_fu_283_p0() {
    grp_fu_283_p0 =  (sc_lv<23>) (ap_const_lv30_259168);
}

void CvtColor::thread_grp_fu_283_p1() {
    grp_fu_283_p1 =  (sc_lv<8>) (grp_fu_283_p10.read());
}

void CvtColor::thread_grp_fu_283_p10() {
    grp_fu_283_p10 = esl_zext<30,8>(tmp_523_reg_330.read());
}

void CvtColor::thread_grp_fu_283_p2() {
    grp_fu_283_p2 =  (sc_lv<29>) (grp_fu_283_p20.read());
}

void CvtColor::thread_grp_fu_283_p20() {
    grp_fu_283_p20 = esl_zext<30,29>(grp_fu_294_p3.read());
}

void CvtColor::thread_grp_fu_294_p0() {
    grp_fu_294_p0 =  (sc_lv<20>) (ap_const_lv28_74BC6);
}

void CvtColor::thread_grp_fu_294_p1() {
    grp_fu_294_p1 =  (sc_lv<8>) (grp_fu_294_p10.read());
}

void CvtColor::thread_grp_fu_294_p10() {
    grp_fu_294_p10 = esl_zext<28,8>(tmp_524_reg_335.read());
}

void CvtColor::thread_i_cast_cast_i_fu_173_p1() {
    i_cast_cast_i_fu_173_p1 = esl_zext<10,9>(i_i_reg_151.read());
}

void CvtColor::thread_i_fu_182_p2() {
    i_fu_182_p2 = (!i_i_reg_151.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_i_reg_151.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void CvtColor::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_177_p2.read(), ap_const_lv1_0))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void CvtColor::thread_j_cast_cast_i_fu_188_p1() {
    j_cast_cast_i_fu_188_p1 = esl_zext<11,10>(j_i_reg_162.read());
}

void CvtColor::thread_j_fu_197_p2() {
    j_fu_197_p2 = (!j_i_reg_162.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_i_reg_162.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void CvtColor::thread_p_Val2_6_fu_216_p4() {
    p_Val2_6_fu_216_p4 = grp_fu_283_p3.read().range(29, 22);
}

void CvtColor::thread_p_Val2_7_fu_236_p2() {
    p_Val2_7_fu_236_p2 = (!tmp_3_i_i_i_cast_i_fu_232_p1.read().is_01() || !p_Val2_6_fu_216_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_3_i_i_i_cast_i_fu_232_p1.read()) + sc_biguint<8>(p_Val2_6_fu_216_p4.read()));
}

void CvtColor::thread_p_Val2_s_fu_269_p3() {
    p_Val2_s_fu_269_p3 = (!deleted_zeros_fu_263_p2.read()[0].is_01())? sc_lv<8>(): ((deleted_zeros_fu_263_p2.read()[0].to_bool())? p_Val2_7_fu_236_p2.read(): ap_const_lv8_FF);
}

void CvtColor::thread_p_dst_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()))) {
        p_dst_data_stream_0_V_blk_n = p_dst_data_stream_0_V_full_n.read();
    } else {
        p_dst_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void CvtColor::thread_p_dst_data_stream_0_V_din() {
    p_dst_data_stream_0_V_din = p_Val2_s_reg_345.read();
}

void CvtColor::thread_p_dst_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_dst_data_stream_0_V_write = ap_const_logic_1;
    } else {
        p_dst_data_stream_0_V_write = ap_const_logic_0;
    }
}

void CvtColor::thread_p_dst_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()))) {
        p_dst_data_stream_1_V_blk_n = p_dst_data_stream_1_V_full_n.read();
    } else {
        p_dst_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void CvtColor::thread_p_dst_data_stream_1_V_din() {
    p_dst_data_stream_1_V_din = p_Val2_s_reg_345.read();
}

void CvtColor::thread_p_dst_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_dst_data_stream_1_V_write = ap_const_logic_1;
    } else {
        p_dst_data_stream_1_V_write = ap_const_logic_0;
    }
}

void CvtColor::thread_p_dst_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()))) {
        p_dst_data_stream_2_V_blk_n = p_dst_data_stream_2_V_full_n.read();
    } else {
        p_dst_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void CvtColor::thread_p_dst_data_stream_2_V_din() {
    p_dst_data_stream_2_V_din = p_Val2_s_reg_345.read();
}

void CvtColor::thread_p_dst_data_stream_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_reg_321_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_dst_data_stream_2_V_write = ap_const_logic_1;
    } else {
        p_dst_data_stream_2_V_write = ap_const_logic_0;
    }
}

void CvtColor::thread_p_src_cols_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_src_cols_V_blk_n = p_src_cols_V_empty_n.read();
    } else {
        p_src_cols_V_blk_n = ap_const_logic_1;
    }
}

void CvtColor::thread_p_src_cols_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_rows_V_empty_n.read())))) {
        p_src_cols_V_read = ap_const_logic_1;
    } else {
        p_src_cols_V_read = ap_const_logic_0;
    }
}

void CvtColor::thread_p_src_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1))) {
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n.read();
    } else {
        p_src_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void CvtColor::thread_p_src_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        p_src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void CvtColor::thread_p_src_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1))) {
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n.read();
    } else {
        p_src_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void CvtColor::thread_p_src_data_stream_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_src_data_stream_1_V_read = ap_const_logic_1;
    } else {
        p_src_data_stream_1_V_read = ap_const_logic_0;
    }
}

void CvtColor::thread_p_src_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1))) {
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n.read();
    } else {
        p_src_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void CvtColor::thread_p_src_data_stream_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_23_i_reg_321.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_src_data_stream_2_V_read = ap_const_logic_1;
    } else {
        p_src_data_stream_2_V_read = ap_const_logic_0;
    }
}

void CvtColor::thread_p_src_rows_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_src_rows_V_blk_n = p_src_rows_V_empty_n.read();
    } else {
        p_src_rows_V_blk_n = ap_const_logic_1;
    }
}

void CvtColor::thread_p_src_rows_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_rows_V_empty_n.read())))) {
        p_src_rows_V_read = ap_const_logic_1;
    } else {
        p_src_rows_V_read = ap_const_logic_0;
    }
}

void CvtColor::thread_r_V_i_i_fu_277_p0() {
    r_V_i_i_fu_277_p0 =  (sc_lv<22>) (ap_const_lv29_1322D0);
}

void CvtColor::thread_r_V_i_i_fu_277_p1() {
    r_V_i_i_fu_277_p1 =  (sc_lv<8>) (r_V_i_i_fu_277_p10.read());
}

void CvtColor::thread_r_V_i_i_fu_277_p10() {
    r_V_i_i_fu_277_p10 = esl_zext<29,8>(p_src_data_stream_0_V_dout.read());
}

void CvtColor::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void CvtColor::thread_rev_fu_249_p2() {
    rev_fu_249_p2 = (tmp_519_fu_242_p3.read() ^ ap_const_lv1_1);
}

void CvtColor::thread_start_out() {
    start_out = real_start.read();
}

void CvtColor::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void CvtColor::thread_tmp_23_i_fu_192_p2() {
    tmp_23_i_fu_192_p2 = (!j_cast_cast_i_fu_188_p1.read().is_01() || !p_src_cols_V_read_reg_302.read().is_01())? sc_lv<1>(): (sc_bigint<11>(j_cast_cast_i_fu_188_p1.read()) < sc_bigint<11>(p_src_cols_V_read_reg_302.read()));
}

void CvtColor::thread_tmp_3_i_i_i_cast_i_fu_232_p1() {
    tmp_3_i_i_i_cast_i_fu_232_p1 = esl_zext<8,1>(tmp_fu_225_p3.read());
}

void CvtColor::thread_tmp_519_fu_242_p3() {
    tmp_519_fu_242_p3 = grp_fu_283_p3.read().range(29, 29);
}

void CvtColor::thread_tmp_520_fu_255_p3() {
    tmp_520_fu_255_p3 = p_Val2_7_fu_236_p2.read().range(7, 7);
}

void CvtColor::thread_tmp_fu_225_p3() {
    tmp_fu_225_p3 = grp_fu_283_p3.read().range(21, 21);
}

void CvtColor::thread_tmp_i_fu_177_p2() {
    tmp_i_fu_177_p2 = (!i_cast_cast_i_fu_173_p1.read().is_01() || !p_src_rows_V_read_reg_307.read().is_01())? sc_lv<1>(): (sc_bigint<10>(i_cast_cast_i_fu_173_p1.read()) < sc_bigint<10>(p_src_rows_V_read_reg_307.read()));
}

void CvtColor::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_src_rows_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_i_fu_177_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_23_i_fu_192_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_23_i_fu_192_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

